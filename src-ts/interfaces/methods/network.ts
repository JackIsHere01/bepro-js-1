import {ContractSendMethod} from 'web3-eth-contract';
export interface NetworkMethods {
  COUNCIL_AMOUNT(): ContractSendMethod;
  _governor(): ContractSendMethod;
  _proposedGovernor(): ContractSendMethod;
  claimGovernor(): ContractSendMethod;
  closedIdsCount(): ContractSendMethod;
  disputableTime(): ContractSendMethod;
  incrementIssueID(): ContractSendMethod;
  issues(v: number): ContractSendMethod;
  issuesCIDtoID(v: string): ContractSendMethod;
  mergeCreatorFeeShare(): ContractSendMethod;
  myIssues(v: string, v2: number): ContractSendMethod;
  oraclers(v: string): ContractSendMethod;
  oraclersArray(v: number): ContractSendMethod;
  oraclesStaked(): ContractSendMethod;
  paused(): ContractSendMethod;
  percentageNeededForDispute(): ContractSendMethod;
  proposeGovernor(proposedGovernor: string): ContractSendMethod;
  redeemTime(): ContractSendMethod;
  settlerToken(): ContractSendMethod;
  totalStaked(): ContractSendMethod;
  transactionToken(): ContractSendMethod;
  lock(_tokenAmount: number): ContractSendMethod;
  unlock(_tokenAmount: number, _from: string): ContractSendMethod;
  delegateOracles(_tokenAmount: number, _delegatedTo: string): ContractSendMethod;
  disputeMerge(_issueID: number, _mergeID: number): ContractSendMethod;
  isIssueInDraft(_issueID: number): ContractSendMethod;
  isMergeInDraft(_issueID: number, _mergeID: number): ContractSendMethod;
  isMergeDisputed(_issueID: number, _mergeID: number): ContractSendMethod;
  openIssue(_cid: string, _tokenAmount: number): ContractSendMethod;
  recognizeAsFinished(_issueId: number): ContractSendMethod;
  redeemIssue(_issueId: number): ContractSendMethod;
  updateIssue(_issueId: number, _newTokenAmount: number): ContractSendMethod;
  proposeIssueMerge(_issueID: number, _prAddresses: string[], _prAmounts: number[]): ContractSendMethod;
  closeIssue(_issueID: number, _mergeID: number): ContractSendMethod;
  getIssuesByAddress(_address: string): ContractSendMethod;
  getOraclesByAddress(_address: string): ContractSendMethod;
  getOraclesSummary(_address: string): ContractSendMethod;
  getIssueByCID(_issueCID: string): ContractSendMethod;
  getIssueById(_issueID: number): ContractSendMethod;
  getMergeById(_issueID: number, _mergeId: number): ContractSendMethod;
  changeMergeCreatorFeeShare(_mergeCreatorFeeShare: number): ContractSendMethod;
  changePercentageNeededForDispute(_percentageNeededForDispute: number): ContractSendMethod;
  changeDisputableTime(_disputableTime: number): ContractSendMethod;
  changeRedeemTime(_redeemTime: number): ContractSendMethod;
  changeCOUNCIL_AMOUNT(_COUNCIL_AMOUNT: number): ContractSendMethod;
}
